{
  "hash": "a9664bc1b080c94c310b688ed8f38947",
  "result": {
    "markdown": "---\ntitle: \"Linear Mixed Models: Random Intercept and Slope\"\nauthor: \"Biostatistics Working Group\"\n---\n\n\n# LMM: Intercept & Slope {.unnumbered}\n\n## Overview\n\n<p>\n\nThe Linear Mixed Model with a random intercept and slope (LMM:ris) extends the traditional fixed-effect linear regression by incorporating both a subject-specific random intercept and a random slope. This allows each participant to have their own unique intercept and slope values, reflecting individual starting points and rates of change, in addition to the overall mean-level (fixed-effect) trajectory.\n\nIn this example, we will utilize the LMM:ris to analyze height trajectories obtained across multiple measurement occasions for a sample of youth participating in the ABCD Study. Our primary objective is to understand the stability and evolution in height measurements, while factoring in the clustered nature of observations within individuals over time. The LMM:ris facilitates this by concurrently modeling an overarching sample mean trajectory (fixed effect) and individual variations (random effects) in both starting points (intercepts) and growth rates (slopes) around this mean trajectory.\n\n</p>\n\n## Preliminary Setup\n\n::: panel-tabset\n### Install Packages {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n> **This code installs the r packages necessary for this example, if\n> they are not already installed**\n\n\n::: {.cell messages='false' hash='3b_HowTos_LinearMixedModels_cache/html/pckg-install_177edbe715ba1eadf48f1e8ce74adae6'}\n\n```{.r .cell-code}\n# Create a list of required packages\npackages_required <- c(\"tidyverse\",\"rstatix\",\"DT\",\"lme4\",\"report\",\"broom\",\"gridExtra\")\n\n# Check which packages are not installed and install them\npackages_to_install <- setdiff(packages_required, rownames(installed.packages()))\nif (length(packages_to_install) > 0) {\n    install.packages(packages_to_install)\n}\n\n# Load the required packages\nlapply(packages_required, library, character.only = TRUE)\n```\n:::\n\n:::\n\n### Load Packages\n\n::: blue\n**This code loads the r libraries necessary for this example**\n\n\n::: {.cell messages='false' hash='3b_HowTos_LinearMixedModels_cache/html/lib-load_d2ba6b7df2cfc65e743ccfd1395623f3'}\n\n```{.r .cell-code}\nlibrary(tidyverse)    # Collection of R packages for data science\nlibrary(rstatix)      # Pipe-friendly framework for basic statistical tests\nlibrary(DT)           # Rendering interactive data tables\nlibrary(lme4)         # Linear mixed-effects models\nlibrary(report)       # Easy reporting of regression analyses\nlibrary(broom)        # Tidy and augment statistical models output\nlibrary(gridExtra)    # Arrange multiple grid-based plots on a page\n```\n:::\n\n:::\n\n### Config Options\n\n::: blue\n**This code configures knitr code chunk options**\n\n\n::: {.cell messages='false' hash='3b_HowTos_LinearMixedModels_cache/html/config_52ebc15d6975a545ef65bfa56f4bae7b'}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = T, message=F, warning=F, error=F, \n                      comment=NA, cache=T, code_folding=T,\n                      R.options=list(width=220, digits = 3),\n                      fig.align='center', \n                      out.width='75%', fig.asp=.75)\n```\n:::\n\n:::\n:::\n\n## Descriptives Overview\n\n::: panel-tabset\n### Read and View Data {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n**This code reads in and shows the data to be used in the current\nexample**\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n# Set the data paths\ndata_path_1 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/demo5.0.rds\"\ndata_path_2 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Read the data\ndata_demographics <- readRDS(data_path_1)\ndata_nonimaging <- readRDS(data_path_2)\n\n# Subset the nonimaging data to include desired variables\nselected_vars <- c(\"src_subject_id\", \"eventname\", \"nihtbx_totalcomp_fc\", \"anthroweightcalc\", \"anthroheightcalc\")\nsubset_data <- data_nonimaging[, selected_vars]\n\nlibrary(dplyr)\n# # Merge the datasets on 'src_subject_id' and 'eventname'\nmerged_data <- data_demographics %>%\n  full_join(subset_data, by = c(\"src_subject_id\", \"eventname\"))\n\n# Inspect the merged data structure\nstr(merged_data)\n\n# Define event names to be retained in the analysis and convert variables to appropriate data types\neventnames_to_include <- c(\"baseline_year_1_arm_1\",\n                           \"1_year_follow_up_y_arm_1\",\n                           \"2_year_follow_up_y_arm_1\",\n                           \"3_year_follow_up_y_arm_1\",\n                           \"4_year_follow_up_y_arm_1\")\n\ndf <- merged_data %>%\n  filter(eventname %in% eventnames_to_include) %>%\n  mutate(\n    src_subject_id = as.factor(src_subject_id),\n    eventname = factor(eventname, levels = eventnames_to_include, ordered = TRUE),\n    age = as.numeric(age),\n    sex = as.factor(sex),\n    race.4level = as.factor(race.4level),\n    hisp = as.factor(hisp),\n    high.educ.bl = as.factor(high.educ.bl),\n    household.income.bl = as.factor(household.income.bl),\n    acs_raked_propensity_score = as.numeric(acs_raked_propensity_score),\n    rel_family_id.bl = as.factor(rel_family_id.bl),\n    site_id_l = as.factor(site_id_l),\n    nihtbx_totalcomp_fc = as.numeric(nihtbx_totalcomp_fc),\n    anthroweightcalc = as.numeric(anthroweightcalc),\n    anthroheightcalc = as.numeric(anthroheightcalc)\n  ) %>%\n  # Exclude cases from unused assessment waves\n  filter(!is.na(eventname))\n```\n:::\n\n:::\n\n### Descriptives\n\n::: blue\n**This code creates a descriptives table**\n\n\n::: {.cell messages='false' hash='3b_HowTos_LinearMixedModels_cache/html/descriptives_15b6592007abca56489f07efb3a9b33a'}\n\n```{.r .cell-code}\n# Define a function to compute descriptives\ncompute_descriptives <- function(data, event_name) {\n  # For factor variables\n  sex_desc <- paste0(table(data$sex), \" (\", round(100 * prop.table(table(data$sex)), 1), \"%)\")\n  race_desc <- paste0(table(data$race.4level), \" (\", round(100 * prop.table(table(data$race.4level)), 1), \"%)\")\n  \n  # For numeric variables\n  age_desc <- paste0(round(mean(data$age, na.rm = TRUE), 2), \" (\", round(sd(data$age, na.rm = TRUE), 2), \")\")\n  weight_desc <- paste0(round(mean(data$anthroweightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroweightcalc, na.rm = TRUE), 2), \")\")\n  height_desc <- paste0(round(mean(data$anthroheightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroheightcalc, na.rm = TRUE), 2), \")\")\n  \n  # Combine into a data frame\n  desc_df <- data.frame(\n    Variable = c(\"Sex - Female\", \"Sex - Male or other\", \"Race - Asian\", \"Race - Black\", \"Race - Other/Mixed\", \"Race - White\", \"Age\", \"Weight\", \"Height\"),\n    Value = c(sex_desc, race_desc, age_desc, weight_desc, height_desc)\n  )\n  \n  # Rename the Value column based on event name\n  colnames(desc_df)[2] <- event_name\n  return(desc_df)\n}\n\n# Compute descriptives for each event\nbaseline_desc <- compute_descriptives(subset(df, eventname == \"baseline_year_1_arm_1\"), \"baseline_year_1_arm_1\")\none_year_desc <- compute_descriptives(subset(df, eventname == \"1_year_follow_up_y_arm_1\"), \"1_year_follow_up_y_arm_1\")\ntwo_year_desc <- compute_descriptives(subset(df, eventname == \"2_year_follow_up_y_arm_1\"), \"2_year_follow_up_y_arm_1\")\nthree_year_desc <- compute_descriptives(subset(df, eventname == \"3_year_follow_up_y_arm_1\"), \"3_year_follow_up_y_arm_1\")\n\n# Join all data frames side-by-side\nfinal_table <- baseline_desc %>%\n  left_join(one_year_desc, by = \"Variable\") %>%\n  left_join(two_year_desc, by = \"Variable\") %>%\n  left_join(three_year_desc, by = \"Variable\")\n\n# Adjust for the required format\nfinal_table[1:6, 3:5] <- NA\n\n# Round numeric values to two decimal places\nnumeric_cols <- sapply(final_table, is.numeric)\nfinal_table[numeric_cols] <- lapply(final_table[numeric_cols], round, 2)\n\n# Create heading rows with the same columns as final_table\nheading_rows <- data.frame(\n  Variable = c(\"Sex\", \"Race\"),\n  baseline_year_1_arm_1 = NA_real_,\n  `1_year_follow_up_y_arm_1` = NA_real_,\n  `2_year_follow_up_y_arm_1` = NA_real_,\n  `3_year_follow_up_y_arm_1` = NA_real_\n)\n\n# Set column names of heading_rows to match final_table\ncolnames(heading_rows) <- colnames(final_table)\n\n# Introduce group labels and adjust the \"Variable\" column\nfinal_table <- rbind(\n                    heading_rows[1,], \n                    final_table[1:2,],\n                    heading_rows[2,], \n                    final_table[3:6,], \n                    final_table[7:9,]\n                    )\n\n# Update the Variable column to remove redundant factor variable name\nfinal_table$Variable <- gsub(\"Sex - \", \"\", final_table$Variable)\nfinal_table$Variable <- gsub(\"Race - \", \"\", final_table$Variable)\nfinal_table$Variable[final_table$Variable == \"Male or other\"] <- \"Male\"\n\n# Add non-breaking spaces for increased indentation\nfinal_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")] <- \n  paste0(rep(\"&nbsp;\", 6), final_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")])\n\n# Update column headers\ncolnames(final_table)[2:5] <- c(\"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\")\n\n# Display the table interactively without row names, with updated column headers, and with HTML entities rendered\ndatatable(final_table, \n          colnames = c(\"\", \"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\"),\n          options = list(pageLength = nrow(final_table), autoWidth = TRUE),\n          rownames = FALSE, escape = FALSE,\n          caption = \"Descriptives Table\")  # Add table title\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-24849f5626af21f8ef01\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-24849f5626af21f8ef01\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Descriptives Table<\\/caption>\",\"data\":[[\"Sex\",\"&nbsp;Female\",\"&nbsp;Male\",\"Race\",\"&nbsp;Asian\",\"&nbsp;Black\",\"&nbsp;Other/Mixed\",\"&nbsp;White\",\"Age\",\"Weight\",\"Height\"],[null,\"5677 (47.8%)\",\"6191 (52.2%)\",null,\"52 (0.5%)\",\"1869 (16.4%)\",\"1992 (17.4%)\",\"7517 (65.8%)\",\"9.48 (0.51)\",\"82.55 (23.76)\",\"55.24 (3.33)\"],[null,null,null,null,null,null,null,null,\"10.51 (1.81)\",\"94.27 (28.36)\",\"57.59 (3.65)\"],[null,null,null,null,null,null,null,null,\"11.6 (1.4)\",\"108.62 (48.86)\",\"60.25 (3.61)\"],[null,null,null,null,null,null,null,null,\"12.47 (0.77)\",\"123.4 (38.25)\",\"62.45 (4.1)\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th><\\/th>\\n      <th>Baseline<\\/th>\\n      <th>Year 1<\\/th>\\n      <th>Year 2<\\/th>\\n      <th>Year 3<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":11,\"autoWidth\":true,\"columnDefs\":[],\"order\":[],\"orderClasses\":false,\"lengthMenu\":[10,11,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n:::\n:::\n  \n## Results \n<div class = \"blue\">\n\n::: panel-tabset\n### Build Model {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n  \nThe code fits a linear mixed model to examine the 'Height' variable across time points ('eventname'). It incorporates both random intercepts and slopes for the time points ('eventname') within each participant ('src_subject_id') to capture individual-level variability in both starting values and rates of change over time. The results of the model are then printed to provide a detailed summary of the fitted model parameters.\n\n**STEP 1: Compute LMM with Random Intercepts and Slopes**\n\n::: {.cell hash='3b_HowTos_LinearMixedModels_cache/html/build-model-1_c0c1d3f301d8298a269e71e02f3dde8d'}\n\n```{.r .fold-hide .cell-code}\n# Read data from the parquet file\n# df <- read_parquet(\"/Users/shawes/df.parquet\")\n\n# ## Linear Mixed Model with a random intercept and random slope (LMM-ris)\n# random_intercepts_slopes <- lmer(anthroheightcalc ~ 1 + eventname + (1|src_subject_id), data = df, REML=T)\n\n# print(random_intercepts_slopes)\n\n# ```\n\n# ```{r model-output}\n# #| echo: TRUE\n# #| messages: FALSE\n# #| warning: FALSE\n\n# ## Output and reports extending from the LMM-ris analyses\n# summary(random_intercepts_slopes)\n# confint(random_intercepts_slopes, level = 0.95, method = \"Wald\")\n# report_performance(random_intercepts_slopes)\n\n# ```\n\n# The code fits a Linear Mixed Model (LMM:ris) to predict children's height based on different time points (denoted as eventname). Individual variability is captured through random intercepts associated with each participant (src_subject_id). The results suggest a significant change in height across the time points, with the model accounting for 89% (r round(conditional_R2, 2)) of the total variation and 37% (r round(marginal_R2, 2)) attributed to the fixed effects alone.\n\n# In the model, the linear term for eventname has an estimated effect of r round(model_summary$coefficients[\"eventname.L\", \"Estimate\"], 2), indicating a significant increase in height across time points. Additionally, there's variability in initial height across participants, reflected by a random intercept standard deviation of r round(random_effects[\"src_subject_id\", \"Std.Dev.\"], 2).\n\n# ### Model Plots\n\n# The following set of plots are used to facilitate model diagnostics. The first is a histogram showcasing the distribution of random intercepts for individual subjects, indicating variations in height not explained by the fixed effects. The second depicts residuals versus fitted values, helping assess the model's fit and potential heteroscedasticity. The third contrasts observed and predicted height values across different time points, offering a side-by-side evaluation of the model's predictions against actual observations.\n\n# ::: blue\n# ```{r diagnosticplots}\n\n# # Assuming your model is named `random_intercepts_slope`\n# # 1. Extract the random effects\n# random_effects <- ranef(random_intercepts_slopes)[[1]]\n\n# # 2. Convert to dataframe\n# random_effects_df <- data.frame(Intercept = random_effects$`(Intercept)`)\n\n# # Plot 1: Histogram\n# hist_plot <- ggplot(random_effects_df, aes(x = Intercept)) +\n#   geom_histogram(aes(y = ..density..), bins = 30, color = \"black\", fill = \"lightblue\") +\n#   labs(title = \"Histogram of Random Effects\", x = \"Random Intercept Values\", y = \"Density\") +\n#   theme_minimal()\n\n# # Plot 2: Residuals vs Fitted Values\n# resid_plot <- ggplot(NULL, aes(x = fitted_values, y = residuals)) +\n#   geom_point(alpha = 0.5) +\n#   geom_hline(yintercept = 0, linetype = \"dashed\") +\n#   labs(title = \"Residuals vs Fitted Values\", x = \"Fitted Values\", y = \"Residuals\") +\n#   theme_minimal()\n\n# ```\n\n# ```{r trajectoryplot}\n\n# # Extract the data frame used in the model\n# model_data <- random_intercepts_slopes@frame\n\n# # Extract unique subject IDs from the model's data\n# original_subject_ids <- unique(model_data$src_subject_id)\n\n# # Subset the original data to include only those subjects\n# df_subset <- df %>% filter(src_subject_id %in% original_subject_ids)\n\n# eventname_map <- c(\n#   \"baseline_year_1_arm_1\" = \"Baseline\",\n#   \"1_year_follow_up_y_arm_1\" = \"Year_1\",\n#   \"2_year_follow_up_y_arm_1\" = \"Year_2\",\n#   \"3_year_follow_up_y_arm_1\" = \"Year_3\",\n#   \"4_year_follow_up_y_arm_1\" = \"Year_4\"\n# )\n\n# # Plot\n# ggplot(df, aes(x = eventname, y = anthroheightcalc, group = src_subject_id)) +\n  \n#   # Individual estimated height trajectories in faded lines\n#   geom_line(aes(group = src_subject_id), alpha = 0.3, color = \"grey50\") +\n\n#   # Overall group-mean trajectory in blue with increased thickness\n#   stat_summary(aes(group = 1), fun = mean, geom = \"line\", color = \"blue\", linewidth = 1) +\n\n#   labs(title = \"Individual and Group-Mean Height Trajectories\",\n#        x = \"Event Name\",\n#        y = \"Height\") +\n#   theme_minimal()\n```\n:::\n\n\nThe provided code visualizes individual and group-mean height trajectories over different event names. Individual height trajectories for each subject are depicted as faded gray lines, allowing for a clear view of the variability among subjects. In contrast, the overall group-mean trajectory, which represents the average trend across all individuals for each event name, is highlighted in blue. The average height at r mean(df_descriptable$Height) has increased by r mean(df_descriptable$Height_followup - df_descriptable$Height) units from baseline.\n\n## Wrapping Up\n<div class = \"blue\">\n\n::: panel-tabset\n### Write-up {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n\nThe linear mixed model analysis was conducted to predict children's height across different time points (Baseline, Year_1, Year_2, Year_3, and Year_4). The eventname predictor was statistically significant with a p-value of r format.pval(fixed_effects$Pr(>|t|)[2], digits = 3). The model's overall ability to explain the variance in height was xxxxx, with a conditional R^2 of r report_performance(random_intercepts)$Conditional R2[1], indicating that it accounted for this proportion of the variability in height when considering both fixed and random effects. The marginal R^2 was r report_performance(random_intercepts)$Marginal R2[1], meaning that the fixed effects alone explained this proportion of the variability.\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.28/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}