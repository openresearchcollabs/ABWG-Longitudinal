{
  "hash": "57c78dc64cc89a24139d445bbf9da1bd",
  "result": {
    "markdown": "---\ntitle: \"Latent Growth Curve Models\"\nauthor: \"Biostatistics Working Group\"\n---\n\n\n## Overview\nLatent growth curve models (LGCMs) are a statistical approach that allows researchers to explore the trajectory of growth, decline, or stability over time within individuals. LGCMs allow for modeling individual differences in change trajectories and capturing the underlying structure of growth. These models are a form of structural equation modeling, designed specifically for longitudinal data, where characterizing change across multiple time points is of interest. LGCMs offer a flexible framework that can model both the average trajectory in the population (fixed effects) and individual deviations from this average (random effects). By representing time as a latent construct, these models capture overarching growth patterns while also emphasizing individual differences in patterns of growth.\n\n![Latent Growth Curve Model 1_Tutorial](./figures/lgcm.png)\n\n### When to use Latent Growth Curve Models?\nYou should consider latent growth curve models in the following situations:\n\n1. You aim to explore: The trajectory of change over time for an observed variable.\n2. Your data: Contains repeated measures taken at multiple time points.\n3. You seek to: Capture both the average growth pattern in the population and individual differences in that growth.\n\n### Getting Started with Latent Growth Curve Models\nIn this tutorial, we will guide you through an example of a latent growth curve model using a small dataset. By the time you complete this tutorial, you will be equipped to:\n\n1. Understand the basic principles of latent growth curve models.\n2. Implement these models on your own longitudinal data using appropriate statistical tools.\n3. Analyze and draw meaningful inferences from the latent growth curve model outputs.\n\n## Basic Example\nIn this tutorial, we will begin by generating a sample dataset directly within R to ensure everyone has the same starting point and can follow along without needing to download or access external files. This generated dataset will serve as our example throughout this tutorial. In your own analyses, you'll likely start by importing your own data.\n\nThe simulated dataset created for this example consists of scores on a single outcome variable (\"Job_Satisfaction\") for 500 individuals each measured at four time points: T1-T4.\n\n#### Create Example Dataset\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-1_4767982b77888a5638f8c6e8bec0642f'}\n\n```{.r .cell-code}\n# Setting the seed for reproducibility\nset.seed(123)\n\n# Setting the number of individuals for our sample data\nn <- 500\n\n# Specifying the desired correlation matrix for our data\ncor_matrix <- matrix(c(1, 0.3, 0.3, 0.3, \n                      0.3, 1, 0.3, 0.3,\n                      0.3, 0.3, 1, 0.3,\n                      0.3, 0.3, 0.3, 1), \n                      nrow=4)\n\n# Using Cholesky decomposition to generate correlated data\ncholesky <- chol(cor_matrix)\n\n# Generating correlated random data\nrandom_data <- matrix(rnorm(n * 4), ncol=4)\ncorrelated_data <- random_data %*% cholesky\n\n# Converting the generated data into a structured data frame in wide format\ndata <- data.frame(\n  Individual = 1:n,\n  Job_Satisfaction_T1 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T2 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T3 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T4 = round(runif(n, 5, 10))\n)\n```\n:::\n\n\n### View Dataset\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-2_a35c951e47d99223f740d9b253ec3c25'}\n\n```{.r .cell-code}\nhead(data)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Individual\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T1\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T2\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T3\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T4\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"7\",\"3\":\"6\",\"4\":\"6\",\"5\":\"6\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"9\",\"3\":\"7\",\"4\":\"10\",\"5\":\"7\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"8\",\"3\":\"7\",\"4\":\"9\",\"5\":\"6\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"9\",\"3\":\"8\",\"4\":\"8\",\"5\":\"6\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"6\",\"3\":\"5\",\"4\":\"6\",\"5\":\"9\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"6\",\"3\":\"7\",\"4\":\"5\",\"5\":\"8\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Model Specification and Estimation\nTo specify a Latent Growth Curve Model (LGCM), we will leverage the lavaan syntax to delineate both the measurement model and the structural model. The LGCM allows us to capture the trajectory of an outcome variable across multiple time points. By doing so, we can understand the inherent growth patterns and the variability around this growth, offering insights into individual differences and their development over time.\n\n#### Install and Load Necessary Libraries\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-3_923e8ad95588ccc7eb45d4b243bd8350'}\n\n```{.r .cell-code}\nif (!(\"lavaan\" %in% installed.packages())) {\n  install.packages(\"lavaan\")\n}\n\nlibrary(lavaan)\n```\n:::\n\n\n#### Model\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-4_d1cdcd190204579b81e4c7642a758237'}\n\n```{.r .cell-code}\n# Define the Latent Growth Curve Model\nmodel <- '\n  # Latent variables\n    i =~ 1 * Job_Satisfaction_T1 + 1 * Job_Satisfaction_T2 + 1 * Job_Satisfaction_T3 + 1 * Job_Satisfaction_T4\n    s =~ 0 * Job_Satisfaction_T1 + 1 * Job_Satisfaction_T2 + 2 * Job_Satisfaction_T3 + 3 * Job_Satisfaction_T4\n\n  # Variances\n    i ~~ var_i * i\n    s ~~ var_s * s\n\n  # Covariance\n    i ~~ cov_is * s\n'\n```\n:::\n\n\n#### Fit Model\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-5_ff97907868064967194372427a75cfb9'}\n\n```{.r .cell-code}\n# Fit the model\nfit <- sem(model, data = data, missing = \"FIML\")\n```\n:::\n\n\n#### Model Summary\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-6_c4fe74b2e187f3ea5285375dd8650ca7'}\n\n```{.r .cell-code}\nsummary(fit, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 31 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                        11\n\n  Number of observations                           500\n  Number of missing patterns                         1\n\nModel Test User Model:\n                                                      \n  Test statistic                                 1.904\n  Degrees of freedom                                 3\n  P-value (Chi-square)                           0.593\n\nModel Test Baseline Model:\n\n  Test statistic                                 4.780\n  Degrees of freedom                                 6\n  P-value                                        0.572\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    1.000\n  Tucker-Lewis Index (TLI)                      -0.797\n                                                      \n  Robust Comparative Fit Index (CFI)             1.000\n  Robust Tucker-Lewis Index (TLI)               -0.797\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -3605.325\n  Loglikelihood unrestricted model (H1)      -3604.373\n                                                      \n  Akaike (AIC)                                7232.650\n  Bayesian (BIC)                              7279.011\n  Sample-size adjusted Bayesian (SABIC)       7244.096\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.000\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.063\n  P-value H_0: RMSEA <= 0.050                    0.887\n  P-value H_0: RMSEA >= 0.080                    0.013\n                                                      \n  Robust RMSEA                                   0.000\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.063\n  P-value H_0: Robust RMSEA <= 0.050             0.887\n  P-value H_0: Robust RMSEA >= 0.080             0.013\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.017\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Observed\n  Observed information based on                Hessian\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  i =~                                                                  \n    Job_Stsfctn_T1    1.000                                  NA       NA\n    Job_Stsfctn_T2    1.000                                  NA       NA\n    Job_Stsfctn_T3    1.000                                  NA       NA\n    Job_Stsfctn_T4    1.000                                  NA       NA\n  s =~                                                                  \n    Job_Stsfctn_T1    0.000                                  NA       NA\n    Job_Stsfctn_T2    1.000                                  NA       NA\n    Job_Stsfctn_T3    2.000                                  NA       NA\n    Job_Stsfctn_T4    3.000                                  NA       NA\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  i ~~                                                                  \n    s       (cv_s)    0.085    0.063    1.342    0.180    0.843    0.843\n\nIntercepts:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .Job_Stsfctn_T1    7.456    0.064  115.822    0.000    7.456    5.180\n   .Job_Stsfctn_T2    7.446    0.066  112.900    0.000    7.446    5.049\n   .Job_Stsfctn_T3    7.488    0.066  114.172    0.000    7.488    5.106\n   .Job_Stsfctn_T4    7.550    0.067  112.931    0.000    7.550    5.050\n    i                 0.000                                  NA       NA\n    s                 0.000                                  NA       NA\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n    i       (var_)   -0.168    0.139   -1.209    0.227       NA       NA\n    s       (vr_s)   -0.060    0.037   -1.598    0.110       NA       NA\n   .Jb_S_T1           2.241    0.197   11.401    0.000    2.241    1.081\n   .Jb_S_T2           2.234    0.151   14.797    0.000    2.234    1.027\n   .Jb_S_T3           2.220    0.152   14.563    0.000    2.220    1.032\n   .Jb_S_T4           2.433    0.210   11.601    0.000    2.433    1.089\n\nR-Square:\n                   Estimate\n    Job_Stsfctn_T1   -0.081\n    Job_Stsfctn_T2   -0.027\n    Job_Stsfctn_T3   -0.032\n    Job_Stsfctn_T4   -0.089\n```\n:::\n:::\n\n::: {.cell hash='10_Tutorials_LatentGrowthCurveModels_cache/html/unnamed-chunk-7_cd716446d53c547396d19b04ee98bd9f'}\n\n```{.r .cell-code}\n## Creating variable (names) from output to be used for inline text\n\nlibrary(broom)\ntidyfit <- tidy(fit)\n#augmentfit <- augment(fit)\nglancefit <- glance(fit)\n\n# Extract column data\np_values <- tidyfit$p.value\nestimate <- tidyfit$estimate\n\n# Extract p-values for specific terms into tibbles\nintercept_variance_pvalue <- round(tidyfit[tidyfit$term == \"i ~~ i\", \"p.value\"], 3)\nslope_variance_pvalue <- round(tidyfit[tidyfit$term == \"s ~~ s\", \"p.value\"], 3)\nintercept_estimate <- round(tidyfit[tidyfit$term == \"i ~~ i\", \"estimate\"], 3)\nslope_estimate <- round(tidyfit[tidyfit$term == \"s ~~ s\", \"estimate\"], 3)\n\nintercept_slope_covariance <- round(tidyfit[tidyfit$term == \"i ~~ s\", \"estimate\"], 3)\n\nrmsea <- glancefit$rmsea\nbic <- glancefit$BIC\n\n# Extract values from the tibble for inline text\nvar_i_pval <- intercept_variance_pvalue$p.value\nvar_s_pval <- slope_variance_pvalue$p.value\nint_est <- intercept_estimate$estimate\nslp_est <- slope_estimate$estimate \nis_cov <- intercept_slope_covariance\n\n#model_list <- split(tidyfit, tidyfit$term)\n```\n:::\n\n\n### Interpreting the Results\nA Latent Growth Curve Model (LGCM) was used to understand the trajectory of scores over time. This model separates the growth into two latent factors:\n- `intercept`: Represents the initial status or starting point.\n- `slope`: Represents the rate of change over time.\n\nFrom the `sem` output, we can interpret:\n- The average starting point (intercept) for the scores: -0.168\n- The average rate of change (slope) for the scores: -0.06\n\nThe variance in the intercept and slope, 0.227 and 0.11 respectively, gives us information on individual differences in the initial status and rate of change. Additionally, the covariance between the intercept and slope 0.085, informs us about the relationship between the initial status and the rate of change.\n\nThe RMSEA of the model is 0.\nThe BIC of the model is 7279.011.\n\n\n\n## Conclusion\nThe LGCM provides a comprehensive understanding of the trajectory of scores over time. By examining the estimated intercept and slope, we can determine the general trend of scores across time points. Additionally, the variance and covariance parameters provide insights into individual differences in growth trajectories.\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}