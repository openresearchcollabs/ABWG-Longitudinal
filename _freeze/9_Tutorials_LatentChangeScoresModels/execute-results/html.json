{
  "hash": "9f1e5c5124aaf026fb9c944a9b5fe062",
  "result": {
    "markdown": "---\ntitle: \"Latent Change Score Models\"\nauthor: \"Biostatistics Working Group\"\n---\n\n\n## Overview\nLatent change score models (LCSMs) are a sophisticated statistical method designed to delve deep into the intricacies of individual change over time. LCSMs have gained prominence in fields such as psychology, health sciences, and education for their ability to decipher the underlying structure and magnitude of change. These models represent an evolution of traditional growth curve models, emphasizing the differences between consecutive time points to capture the essence of change. Particularly adept for longitudinal data, LCSMs shine when there's a need to understand how and why individuals change over multiple time points, offering insights into both the rate and direction of change. At their core, LCSMs utilize a latent variable framework to model the difference scores, ensuring that the observed change is disentangled from measurement error. This unique approach to modeling change, by focusing on the \"latent\" or hidden aspects of growth or decline, is what lends the method its distinctive name.\n\n[+add diagrams/figures]\n\n### When to use Latent Change Score Models?\nYou should consider latent change score models in the following situations:\n\n1. You aim to understand: The dynamics of individual change over time.\n2. Your data: Contains repeated measures spanning multiple time points.\n3. You are interested in: Quantifying both the magnitude and direction of change for each individual in your sample.\n\n### Getting Started with Latent Change Score Models\nIn this tutorial, we will guide you through an example of latent change score model using a small dataset. By the time you complete this tutorial, you will be equipped to:\n\n1. Understand the basic principles of latent change score models.\n2. Implement these models on your own longitudinal data using appropriate statistical tools.\n3. Analyze and discern the implications derived from the latent change score model analysis.\n\n## Basic Example\nIn this tutorial, we will begin by generating a sample dataset directly within R to ensure everyone has the same starting point and can follow along without needing to download or access external files. This generated dataset will serve as our example throughout this tutorial. In your own analyses, you'll likely start by importing your own data.\n\nThe simulated dataset created for this example consists of scores on a single outcome variable (\"Job_Satisfaction\") for 500 individuals each measured at four time points: T1-T4.\n\n#### Create Example Dataset\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-1_2fd9250c7a5f401843695b26e0addaa7'}\n\n```{.r .cell-code}\n# Setting the seed for reproducibility\nset.seed(123)\n\n# Setting the number of individuals for our sample data\nn <- 500\n\n# Specifying the desired correlation matrix for our data\ncor_matrix <- matrix(c(1, 0.3, 0.3, 0.3, \n                      0.3, 1, 0.3, 0.3,\n                      0.3, 0.3, 1, 0.3,\n                      0.3, 0.3, 0.3, 1), \n                      nrow=4)\n\n# Using Cholesky decomposition to generate correlated data\ncholesky <- chol(cor_matrix)\n\n# Generating correlated random data\nrandom_data <- matrix(rnorm(n * 4), ncol=4)\ncorrelated_data <- random_data %*% cholesky\n\n# Converting the generated data into a structured data frame in wide format\ndata_wide <- data.frame(\n  Individual = 1:n,\n  Job_Satisfaction_T1 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T2 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T3 = round(runif(n, 5, 10)),\n  Job_Satisfaction_T4 = round(runif(n, 5, 10))\n)\n```\n:::\n\n\n### View Dataset\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-2_05e433e76ddba5bbf23ce968e5a05bab'}\n\n```{.r .cell-code}\nhead(data_wide)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Individual\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T1\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T2\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T3\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Job_Satisfaction_T4\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"7\",\"3\":\"6\",\"4\":\"6\",\"5\":\"6\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"9\",\"3\":\"7\",\"4\":\"10\",\"5\":\"7\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"8\",\"3\":\"7\",\"4\":\"9\",\"5\":\"6\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"9\",\"3\":\"8\",\"4\":\"8\",\"5\":\"6\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"6\",\"3\":\"5\",\"4\":\"6\",\"5\":\"9\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"6\",\"3\":\"7\",\"4\":\"5\",\"5\":\"8\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Model Specification and Estimation\nTo specify a Latent Change Score Model (LCSM), we will employ the lavaan syntax to detail both the measurement model and the structural model. In an LCSM, we focus on modeling the changes in an outcome variable from one time point to the next. This enables us to capture both the magnitude and direction of these changes, while also considering the influences of time-invariant and time-varying predictors.\n\n#### Install and Load Necessary Libraries\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-3_9d7c6cdd8eea8634eed426b9cbf21ea8'}\n\n```{.r .cell-code}\nif (!(\"lavaan\" %in% installed.packages())) {\n  install.packages(\"lavaan\")\n}\n\nlibrary(lavaan)\n```\n:::\n\n\n#### Model\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-4_8b4e714f52234b1eff9864ba5b2c0394'}\n\n```{.r .cell-code}\nlibrary(lavaan)\n\n# Define the Latent Change Score Model\nmodel <- '\n    # Measurement part\n    delta12 =~ Job_Satisfaction_T2\n    delta23 =~ Job_Satisfaction_T3\n    delta34 =~ Job_Satisfaction_T4\n    \n    # Structural part (relationships)\n    delta12 ~ Job_Satisfaction_T1\n    delta23 ~ Job_Satisfaction_T2\n    delta34 ~ Job_Satisfaction_T3\n    \n    # Variances\n    delta12 ~~ 1*delta12\n    delta23 ~~ 1*delta23\n    delta34 ~~ 1*delta34\n'\n```\n:::\n\n\n#### Fit Model\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-5_e6260796c1b3d9f74639d1bc64e66ec3'}\n\n```{.r .cell-code}\n# Fit the model\nfit <- sem(model, data = data_wide)\n```\n:::\n\n\n#### Model Summary\n\n::: {.cell hash='9_Tutorials_LatentChangeScoresModels_cache/html/unnamed-chunk-6_51ecd34f0cf2c588a73e5d73fa35b07a'}\n\n```{.r .cell-code}\n# Summary of the model\nsummary(fit, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.16 ended normally after 11 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         6\n\n  Number of observations                           500\n\nModel Test User Model:\n                                                      \n  Test statistic                               606.408\n  Degrees of freedom                                 3\n  P-value (Chi-square)                           0.000\n\nModel Test Baseline Model:\n\n  Test statistic                                 4.780\n  Degrees of freedom                                 6\n  P-value                                        0.572\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    0.000\n  Tucker-Lewis Index (TLI)                     990.264\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -3015.489\n  Loglikelihood unrestricted model (H1)      -2712.285\n                                                      \n  Akaike (AIC)                                6042.979\n  Bayesian (BIC)                              6068.266\n  Sample-size adjusted Bayesian (SABIC)       6049.222\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.634\n  90 Percent confidence interval - lower         0.592\n  90 Percent confidence interval - upper         0.677\n  P-value H_0: RMSEA <= 0.050                    0.000\n  P-value H_0: RMSEA >= 0.080                    1.000\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.298\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nLatent Variables:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  delta12 =~                                                            \n    Job_Stsfctn_T2    1.000                               1.001    1.000\n  delta23 =~                                                            \n    Job_Stsfctn_T3    1.000                               1.000    1.000\n  delta34 =~                                                            \n    Job_Stsfctn_T4    1.000                               1.000    1.000\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n  delta12 ~                                                             \n    Job_Stsfctn_T1   -0.034    0.031   -1.095    0.274   -0.034   -0.049\n  delta23 ~                                                             \n    Job_Stsfctn_T2   -0.019    0.913   -0.020    0.984   -0.019   -0.019\n  delta34 ~                                                             \n    Job_Stsfctn_T3   -0.022   48.666   -0.000    1.000   -0.022   -0.022\n\nCovariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n .delta12 ~~                                                            \n   .delta23          -0.001    0.914   -0.001    1.000   -0.001   -0.001\n   .delta34          -0.032    0.934   -0.034    0.973   -0.032   -0.032\n .delta23 ~~                                                            \n   .delta34          -0.001   48.667   -0.000    1.000   -0.001   -0.001\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)   Std.lv  Std.all\n   .delta12           1.000                               0.998    0.998\n   .delta23           1.000                               1.000    1.000\n   .delta34           1.000                               0.999    0.999\n   .Job_Stsfctn_T2    0.000                               0.000    0.000\n   .Job_Stsfctn_T3    0.000                               0.000    0.000\n   .Job_Stsfctn_T4    0.000                               0.000    0.000\n\nR-Square:\n                   Estimate\n    delta12           0.002\n    delta23           0.000\n    delta34           0.001\n    Job_Stsfctn_T2    1.000\n    Job_Stsfctn_T3    1.000\n    Job_Stsfctn_T4    1.000\n```\n:::\n:::\n\n\n### Interpreting the Results\nA Latent Change Score Model (LCSM) was employed to understand the dynamic changes in scores over time. This model captures the latent change (or difference) between consecutive time points, allowing for a detailed analysis of the trajectory of change.\n\nFrom the `sem` output, we can interpret:\n- The estimated change score from T1 to T2: **r round(fit@coef[\"delta12\"], 3)**\n- The estimated change score from T2 to T3: **r round(fit@coef[\"delta23\"], 3)**\n\nThese coefficients represent the latent change in scores from one time point to the next. A positive coefficient suggests an increase, while a negative coefficient indicates a decrease.\n\n## Conclusion\nThe LCSM provides insights into how scores evolve over time. By examining the estimated change scores, we can determine whether there's an increasing or decreasing trend in the scores across the specified time points. The statistical significance of these change scores can further inform us about the reliability of these observed trends.\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}