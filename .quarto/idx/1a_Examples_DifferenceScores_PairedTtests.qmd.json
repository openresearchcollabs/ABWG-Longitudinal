{"title":"Difference Scores: Paired Samples T-test","markdown":{"yaml":{"title":"Difference Scores: Paired Samples T-test","author":"Biostatistics Working Group"},"headingText":"Paired Samples T-test","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n## Overview\n\n<p>\n\nThis example assesses growth in a subsample of ABCD participants from Baseline (T0) to the 1-Year follow-up (T1), using height as a representative metric. The analysis is conducted in two primary steps: 1) a difference score is calculated between baseline and Year_1 height measurements for each participant; 2) a one-sample t-test is used to test whether the difference score is statistically different than a null hypothesis of zero change. Finally, a visual inspection is further conducted via a scatterplot to graphically represent the relationship between participant's height at Baseline and Year_1. The ensuing analysis and interpretations are detailed in the subsequent sections.\n\n</p>\n\n## Preliminary Setup\n\n::: panel-tabset\n### Install Packages {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n> **This code installs the r packages necessary for this example, if\n> they are not already installed**\n\n```{r pckg-install}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\n# Create a list of required packages\npackages_required <- c(\"tidyverse\",\"rstatix\",\"DT\")\n\n# Check which packages are not installed and install them\npackages_to_install <- setdiff(packages_required, rownames(installed.packages()))\nif (length(packages_to_install) > 0) {\n    install.packages(packages_to_install)\n}\n\n# Load the required packages\nlapply(packages_required, library, character.only = TRUE)\n\n```\n:::\n\n### Load Packages\n\n::: blue\n**This code loads the r libraries necessary for this example**\n\n```{r lib-load}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\nlibrary(tidyverse)    # Collection of R packages for data science\nlibrary(rstatix)      # Pipe-friendly framework for basic statistical tests\nlibrary(DT)           # Rendering interactive data tables\n```\n:::\n\n### Config Options\n\n::: blue\n**This code configures knitr code chunk options**\n\n```{r config}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\nknitr::opts_chunk$set(echo = T, message=F, warning=F, error=F, \n                      comment=NA, cache=T, code_folding=T,\n                      R.options=list(width=220, digits = 3),\n                      fig.align='center', \n                      out.width='75%', fig.asp=.75)\n```\n:::\n:::\n\n## Descriptives Overview\n\n::: panel-tabset\n### Read and View Data {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n**This code reads in and shows the data to be used in the current\nexample**\n\n```{r read-data}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n#| cache: FALSE\n\n# Set the data paths\ndata_path_1 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/demo5.0.rds\"\ndata_path_2 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Read the data\ndata_demographics <- readRDS(data_path_1)\ndata_nonimaging <- readRDS(data_path_2)\n\n# Subset the nonimaging data to include desired variables\nselected_vars <- c(\"src_subject_id\", \"eventname\", \"nihtbx_totalcomp_fc\", \"anthroweightcalc\", \"anthroheightcalc\")\nsubset_data <- data_nonimaging[, selected_vars]\n\nlibrary(dplyr)\n# # Merge the datasets on 'src_subject_id' and 'eventname'\nmerged_data <- data_demographics %>%\n  full_join(subset_data, by = c(\"src_subject_id\", \"eventname\"))\n\n# Inspect the merged data structure\nstr(merged_data)\n\n# Define event names to be retained in the analysis and convert variables to appropriate data types\neventnames_to_include <- c(\"baseline_year_1_arm_1\",\n                           \"1_year_follow_up_y_arm_1\",\n                           \"2_year_follow_up_y_arm_1\",\n                           \"3_year_follow_up_y_arm_1\",\n                           \"4_year_follow_up_y_arm_1\")\n\ndf <- merged_data %>%\n  filter(eventname %in% eventnames_to_include) %>%\n  mutate(\n    src_subject_id = as.factor(src_subject_id),\n    eventname = factor(eventname, levels = eventnames_to_include, ordered = TRUE),\n    age = as.numeric(age),\n    sex = as.factor(sex),\n    race.4level = as.factor(race.4level),\n    hisp = as.factor(hisp),\n    high.educ.bl = as.factor(high.educ.bl),\n    household.income.bl = as.factor(household.income.bl),\n    acs_raked_propensity_score = as.numeric(acs_raked_propensity_score),\n    rel_family_id.bl = as.factor(rel_family_id.bl),\n    site_id_l = as.factor(site_id_l),\n    nihtbx_totalcomp_fc = as.numeric(nihtbx_totalcomp_fc),\n    anthroweightcalc = as.numeric(anthroweightcalc),\n    anthroheightcalc = as.numeric(anthroheightcalc)\n  ) %>%\n  # Exclude cases from unused assessment waves\n  filter(!is.na(eventname))\n\n```\n:::\n\n### Descriptives\n\n::: blue\n**This code creates a descriptives table**\n\n```{r descriptives}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n\n# Define a function to compute descriptives\ncompute_descriptives <- function(data, event_name) {\n  # For factor variables\n  sex_desc <- paste0(table(data$sex), \" (\", round(100 * prop.table(table(data$sex)), 1), \"%)\")\n  race_desc <- paste0(table(data$race.4level), \" (\", round(100 * prop.table(table(data$race.4level)), 1), \"%)\")\n  \n  # For numeric variables\n  age_desc <- paste0(round(mean(data$age, na.rm = TRUE), 2), \" (\", round(sd(data$age, na.rm = TRUE), 2), \")\")\n  weight_desc <- paste0(round(mean(data$anthroweightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroweightcalc, na.rm = TRUE), 2), \")\")\n  height_desc <- paste0(round(mean(data$anthroheightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroheightcalc, na.rm = TRUE), 2), \")\")\n  \n  # Combine into a data frame\n  desc_df <- data.frame(\n    Variable = c(\"Sex - Female\", \"Sex - Male or other\", \"Race - Asian\", \"Race - Black\", \"Race - Other/Mixed\", \"Race - White\", \"Age\", \"Weight\", \"Height\"),\n    Value = c(sex_desc, race_desc, age_desc, weight_desc, height_desc)\n  )\n  \n  # Rename the Value column based on event name\n  colnames(desc_df)[2] <- event_name\n  return(desc_df)\n}\n\n# Compute descriptives for each event\nbaseline_desc <- compute_descriptives(subset(df, eventname == \"baseline_year_1_arm_1\"), \"baseline_year_1_arm_1\")\none_year_desc <- compute_descriptives(subset(df, eventname == \"1_year_follow_up_y_arm_1\"), \"1_year_follow_up_y_arm_1\")\ntwo_year_desc <- compute_descriptives(subset(df, eventname == \"2_year_follow_up_y_arm_1\"), \"2_year_follow_up_y_arm_1\")\nthree_year_desc <- compute_descriptives(subset(df, eventname == \"3_year_follow_up_y_arm_1\"), \"3_year_follow_up_y_arm_1\")\n\n# Join all data frames side-by-side\nfinal_table <- baseline_desc %>%\n  left_join(one_year_desc, by = \"Variable\") %>%\n  left_join(two_year_desc, by = \"Variable\") %>%\n  left_join(three_year_desc, by = \"Variable\")\n\n# Adjust for the required format\nfinal_table[1:6, 3:5] <- NA\n\n# Round numeric values to two decimal places\nnumeric_cols <- sapply(final_table, is.numeric)\nfinal_table[numeric_cols] <- lapply(final_table[numeric_cols], round, 2)\n\n# Create heading rows with the same columns as final_table\nheading_rows <- data.frame(\n  Variable = c(\"Sex\", \"Race\"),\n  baseline_year_1_arm_1 = NA_real_,\n  `1_year_follow_up_y_arm_1` = NA_real_,\n  `2_year_follow_up_y_arm_1` = NA_real_,\n  `3_year_follow_up_y_arm_1` = NA_real_\n)\n\n# Set column names of heading_rows to match final_table\ncolnames(heading_rows) <- colnames(final_table)\n\n# Introduce group labels and adjust the \"Variable\" column\nfinal_table <- rbind(\n                    heading_rows[1,], \n                    final_table[1:2,],\n                    heading_rows[2,], \n                    final_table[3:6,], \n                    final_table[7:9,]\n                    )\n\n# Update the Variable column to remove redundant factor variable name\nfinal_table$Variable <- gsub(\"Sex - \", \"\", final_table$Variable)\nfinal_table$Variable <- gsub(\"Race - \", \"\", final_table$Variable)\nfinal_table$Variable[final_table$Variable == \"Male or other\"] <- \"Male\"\n\n# Add non-breaking spaces for increased indentation\nfinal_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")] <- \n  paste0(rep(\"&nbsp;\", 6), final_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")])\n\n# Update column headers\ncolnames(final_table)[2:5] <- c(\"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\")\n\n# Display the table interactively without row names, with updated column headers, and with HTML entities rendered\ndatatable(final_table, \n          colnames = c(\"\", \"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\"),\n          options = list(pageLength = nrow(final_table), autoWidth = TRUE),\n          rownames = FALSE, escape = FALSE,\n          caption = \"Descriptives Table\")  # Add table title\n\n```\n\n:::\n:::\n\n## Results\n\n::: panel-tabset\n### Build Model: Step I {.tabset .tabset-fade .tabset-pills}\n\n::: blue\nThe code snippet below tells R to compute a difference score by subtracting each participant's height at T1 from their height at T0. Relevant summary statistics are also provided.\n\n**STEP 1: Compute Difference Score**\n\n```{r build-model-ttest-1}\n#| message: FALSE\n#| warning: FALSE\n#| echo: TRUE\n#| class.source: 'fold-hide'\n\n# Define the function to compute difference scores for a given variable and provide a summary\n# Function to compute difference scores for a given variable and provide a summary\ncompute_difference_and_summary <- function(df, variable_name) {\n    # Define the event names of interest\n    baseline_event <- \"baseline_year_1_arm_1\"\n    followup_event <- \"1_year_follow_up_y_arm_1\"\n\n    # Compute the difference between Baseline and Year 1 data for the given variable\n    diff_data <- df %>%\n        filter(eventname %in% c(baseline_event, followup_event)) %>% # Filter for specific event names\n        select(src_subject_id, eventname, all_of(variable_name)) %>% # Select required columns\n        spread(eventname, variable_name) %>% # Convert data from long to wide format\n        mutate(diff = get(followup_event) - get(baseline_event)) %>% # Compute difference between the two time points\n        drop_na(diff) # Exclude rows with NA in the computed difference\n\n    # Summarize the computed difference scores\n    diff_summary <- summary(diff_data$diff)\n\n    # Return the difference data and its summary\n    list(data = diff_data, summary = diff_summary)\n}\n\n# List of variables for which difference scores are to be computed\nvariables_of_interest <- c(\"anthroheightcalc\")\n\n# Compute and store difference scores and summaries for each variable in a list\ndifference_and_summary_list <- lapply(variables_of_interest, function(var) {\n    compute_difference_and_summary(df, var)\n})\n\n# Extract the difference data for the 'anthroheightcalc' variable\nheight_diff_data <- difference_and_summary_list[[1]]$data\n\n# Merge the 'diff' column back to the main df using 'src_subject_id' as the key\ndf <- left_join(df, height_diff_data %>% select(src_subject_id, diff), by = \"src_subject_id\")\n\n```\n\n**Descriptive Statistics for the Difference Score**\n```{r model-checking}\n# Compute statistical summaries for the difference score variable\nlapply(difference_and_summary_list, function(item) {\n    print(item$summary)\n})\n```\n\nThis summary of the difference score variable indicates that the differences range from a decrease of `r min(height_diff_data$diff, na.rm = TRUE)` units to an increase of `r max(height_diff_data$diff, na.rm = TRUE)` units. The median difference is `r median(height_diff_data$diff, na.rm = TRUE)` units, and the average difference is approximately `r mean(height_diff_data$diff, digits = 2, na.rm = TRUE)` units. There are `r sum(is.na(height_diff_data$diff))` missing values in this difference score dataset.\n\n**Descriptive Statistics for the Height Variable**\n```{r}\n## Summary statistics\n# Compute summary statistics for Height by eventname\nsummary <- df %>%\n    group_by(eventname) %>%\n    get_summary_stats(anthroheightcalc, type = \"mean_sd\")\n\ndata.frame(summary)\n```\n\nThe summary statistics provide insights into the Height variable across different `eventname` categories. At baseline, the average height is approximately `r summary$mean[summary$eventname == \"baseline_year_1_arm_1\"]` units with a standard deviation of `r summary$sd[summary$eventname == \"baseline_year_1_arm_1\"]`. Over the years, there’s a noticeable increase in average height: by the first year, it’s about `r summary$mean[summary$eventname == \"1_year_follow_up_y_arm_1\"]` units, and it continues to rise, reaching approximately `r summary$mean[summary$eventname == \"4_year_follow_up_y_arm_1\"]` units by the fourth year. The standard deviation remains relatively consistent over the years, suggesting similar variability in height measurements across these time points.\n\n:::\n\n### Build Model: Step 2 {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n\nA one-sample t-test is computed to examine whether the average difference score is different than zero (indicating change).\n\n**STEP 2: Conduct t-test on Difference Score**\n\n```{r build-model-ttest-2}\n#| class.source: 'fold-hide'\n#| message: FALSE\n#| warning: FALSE\n#| echo: TRUE\n\n# Extract the difference scores for height from the computed list\ndiff_data <- difference_and_summary_list[[1]]$data$diff\n\n# Perform a one-sample t-test on the difference scores for height\ntest_result <- t.test(diff_data, mu = 0, na.rm = TRUE)\n\ntest_result\n\n```\n\nThis one-sample t-test evaluates whether the average difference score deviates significantly from 0. The model output provides:\n\ni. a t-statistic of `r test_result$statistic`;\nii. degrees of freedom of `r test_result$parameter`;\niii. a p-value of `r test_result$p.value`;\niv. a mean estimate of `r test_result$estimate[\"mean of x\"]`;\nv. 95% confidence intervals from `r test_result$conf.int[1]` to `r test_result$conf.int[2]`.\n\nv. 95% confidence intervals from `r round(test_result$conf.int[1], 3)` to `r round(test_result$conf.int[2], 3)`.\n\nWith a t-value of `r test_result$statistic` and a p-value of `r test_result$p.value`, we can determine the significance of the difference. The average difference score across the sample is approximately `r round(test_result$estimate[\"mean of x\"], 2)`. Furthermore, we can be 95% confident that the true mean difference score in the population lies between approximately `r round(test_result$conf.int[1], 2)` and `r round(test_result$conf.int[2], 2)`. This indicates the degree to which there's a change in height from Baseline to Year 1.\n\n:::\n\n### Model Plots\n\n::: blue\n```{r scatterplot}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| code-summary: testing\n\n# Filter data for Baseline\nbaseline_data <- df %>% filter(eventname == \"Baseline\")\n\n# Filter data for Year_1 and join with Baseline data\njoined_data <- baseline_data %>%\n    left_join(df %>% filter(eventname == \"Year_1\"), by = \"src_subject_id\", suffix = c(\"_baseline\", \"_year1\"))\n\n# Create scatterplot\nscatterplot <- ggplot(df, aes(x = anthroheightcalc, y = diff)) +\n    geom_point(aes(color = sex), alpha = 0.5) + # Setting alpha to ensure points are visible\n    geom_smooth(method = \"lm\", color = \"red\") + # Adding linear regression line\n    labs(\n        title = \"Scatterplot of anthroheightcalc vs. Difference Score\",\n        x = \"anthroheightcalc\",\n        y = \"Difference Score\"\n    ) +\n    theme_minimal()\n\nscatterplot\n\n```\n\nThe scatterplot visually depicts the relationship between individuals' heights at baseline and their heights at Year_1. Each point on the plot represents an individual, with their baseline height plotted on the x-axis and their Year_1 height on the y-axis. A noticeable positive linear trend can be observed, as highlighted by the blue regression line, indicating that those who were taller at baseline generally remained taller at Year_1. The strength and direction of this relationship can be further quantified with correlation coefficients, but visually, the data suggests a strong positive association between baseline and Year_1 heights.\n\n:::\n:::\n\n## Wrapping Up\n\n::: panel-tabset\n### Write-up {.tabset .tabset-fade .tabset-pills}\n\n::: blue\nIn the study sample, the average height at baseline was approximately `r summary$mean[summary$eventname == \"baseline_year_1_arm_1\"]` units with a standard deviation of `r summary$sd[summary$eventname == \"baseline_year_1_arm_1\"]`, which showed a noticeable increase to an average of `r summary$mean[summary$eventname == \"1_year_follow_up_y_arm_1\"]` units by Year_1. A one-sample t-test was conducted to determine if the mean difference in height from baseline to Year_1 significantly deviated from zero. The results indicated a statistically significant increase with a mean difference of approximately `r round(test_result$estimate, 2)` units (`r round(test_result$conf.int[1], 2)` to `r round(test_result$conf.int[2], 2)`), t(`r test_result$parameter`) = `r round(test_result$statistic, 3)`, p < `r test_result$p.value`. Further, a scatterplot visualizing the relationship between baseline and Year_1 heights showed a strong positive linear trend. This suggests that participants who were taller at baseline generally remained taller at Year_1, reaffirming the consistent growth trend observed in the data.\n\n:::\n:::\n\n\n\n","srcMarkdownNoYaml":"\n\n# Paired Samples T-test {.unnumbered}\n\n## Overview\n\n<p>\n\nThis example assesses growth in a subsample of ABCD participants from Baseline (T0) to the 1-Year follow-up (T1), using height as a representative metric. The analysis is conducted in two primary steps: 1) a difference score is calculated between baseline and Year_1 height measurements for each participant; 2) a one-sample t-test is used to test whether the difference score is statistically different than a null hypothesis of zero change. Finally, a visual inspection is further conducted via a scatterplot to graphically represent the relationship between participant's height at Baseline and Year_1. The ensuing analysis and interpretations are detailed in the subsequent sections.\n\n</p>\n\n## Preliminary Setup\n\n::: panel-tabset\n### Install Packages {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n> **This code installs the r packages necessary for this example, if\n> they are not already installed**\n\n```{r pckg-install}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\n# Create a list of required packages\npackages_required <- c(\"tidyverse\",\"rstatix\",\"DT\")\n\n# Check which packages are not installed and install them\npackages_to_install <- setdiff(packages_required, rownames(installed.packages()))\nif (length(packages_to_install) > 0) {\n    install.packages(packages_to_install)\n}\n\n# Load the required packages\nlapply(packages_required, library, character.only = TRUE)\n\n```\n:::\n\n### Load Packages\n\n::: blue\n**This code loads the r libraries necessary for this example**\n\n```{r lib-load}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\nlibrary(tidyverse)    # Collection of R packages for data science\nlibrary(rstatix)      # Pipe-friendly framework for basic statistical tests\nlibrary(DT)           # Rendering interactive data tables\n```\n:::\n\n### Config Options\n\n::: blue\n**This code configures knitr code chunk options**\n\n```{r config}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n\nknitr::opts_chunk$set(echo = T, message=F, warning=F, error=F, \n                      comment=NA, cache=T, code_folding=T,\n                      R.options=list(width=220, digits = 3),\n                      fig.align='center', \n                      out.width='75%', fig.asp=.75)\n```\n:::\n:::\n\n## Descriptives Overview\n\n::: panel-tabset\n### Read and View Data {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n**This code reads in and shows the data to be used in the current\nexample**\n\n```{r read-data}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| output: FALSE\n#| cache: FALSE\n\n# Set the data paths\ndata_path_1 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/demo5.0.rds\"\ndata_path_2 <- \"/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds\"\n\n# Read the data\ndata_demographics <- readRDS(data_path_1)\ndata_nonimaging <- readRDS(data_path_2)\n\n# Subset the nonimaging data to include desired variables\nselected_vars <- c(\"src_subject_id\", \"eventname\", \"nihtbx_totalcomp_fc\", \"anthroweightcalc\", \"anthroheightcalc\")\nsubset_data <- data_nonimaging[, selected_vars]\n\nlibrary(dplyr)\n# # Merge the datasets on 'src_subject_id' and 'eventname'\nmerged_data <- data_demographics %>%\n  full_join(subset_data, by = c(\"src_subject_id\", \"eventname\"))\n\n# Inspect the merged data structure\nstr(merged_data)\n\n# Define event names to be retained in the analysis and convert variables to appropriate data types\neventnames_to_include <- c(\"baseline_year_1_arm_1\",\n                           \"1_year_follow_up_y_arm_1\",\n                           \"2_year_follow_up_y_arm_1\",\n                           \"3_year_follow_up_y_arm_1\",\n                           \"4_year_follow_up_y_arm_1\")\n\ndf <- merged_data %>%\n  filter(eventname %in% eventnames_to_include) %>%\n  mutate(\n    src_subject_id = as.factor(src_subject_id),\n    eventname = factor(eventname, levels = eventnames_to_include, ordered = TRUE),\n    age = as.numeric(age),\n    sex = as.factor(sex),\n    race.4level = as.factor(race.4level),\n    hisp = as.factor(hisp),\n    high.educ.bl = as.factor(high.educ.bl),\n    household.income.bl = as.factor(household.income.bl),\n    acs_raked_propensity_score = as.numeric(acs_raked_propensity_score),\n    rel_family_id.bl = as.factor(rel_family_id.bl),\n    site_id_l = as.factor(site_id_l),\n    nihtbx_totalcomp_fc = as.numeric(nihtbx_totalcomp_fc),\n    anthroweightcalc = as.numeric(anthroweightcalc),\n    anthroheightcalc = as.numeric(anthroheightcalc)\n  ) %>%\n  # Exclude cases from unused assessment waves\n  filter(!is.na(eventname))\n\n```\n:::\n\n### Descriptives\n\n::: blue\n**This code creates a descriptives table**\n\n```{r descriptives}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n\n# Define a function to compute descriptives\ncompute_descriptives <- function(data, event_name) {\n  # For factor variables\n  sex_desc <- paste0(table(data$sex), \" (\", round(100 * prop.table(table(data$sex)), 1), \"%)\")\n  race_desc <- paste0(table(data$race.4level), \" (\", round(100 * prop.table(table(data$race.4level)), 1), \"%)\")\n  \n  # For numeric variables\n  age_desc <- paste0(round(mean(data$age, na.rm = TRUE), 2), \" (\", round(sd(data$age, na.rm = TRUE), 2), \")\")\n  weight_desc <- paste0(round(mean(data$anthroweightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroweightcalc, na.rm = TRUE), 2), \")\")\n  height_desc <- paste0(round(mean(data$anthroheightcalc, na.rm = TRUE), 2), \" (\", round(sd(data$anthroheightcalc, na.rm = TRUE), 2), \")\")\n  \n  # Combine into a data frame\n  desc_df <- data.frame(\n    Variable = c(\"Sex - Female\", \"Sex - Male or other\", \"Race - Asian\", \"Race - Black\", \"Race - Other/Mixed\", \"Race - White\", \"Age\", \"Weight\", \"Height\"),\n    Value = c(sex_desc, race_desc, age_desc, weight_desc, height_desc)\n  )\n  \n  # Rename the Value column based on event name\n  colnames(desc_df)[2] <- event_name\n  return(desc_df)\n}\n\n# Compute descriptives for each event\nbaseline_desc <- compute_descriptives(subset(df, eventname == \"baseline_year_1_arm_1\"), \"baseline_year_1_arm_1\")\none_year_desc <- compute_descriptives(subset(df, eventname == \"1_year_follow_up_y_arm_1\"), \"1_year_follow_up_y_arm_1\")\ntwo_year_desc <- compute_descriptives(subset(df, eventname == \"2_year_follow_up_y_arm_1\"), \"2_year_follow_up_y_arm_1\")\nthree_year_desc <- compute_descriptives(subset(df, eventname == \"3_year_follow_up_y_arm_1\"), \"3_year_follow_up_y_arm_1\")\n\n# Join all data frames side-by-side\nfinal_table <- baseline_desc %>%\n  left_join(one_year_desc, by = \"Variable\") %>%\n  left_join(two_year_desc, by = \"Variable\") %>%\n  left_join(three_year_desc, by = \"Variable\")\n\n# Adjust for the required format\nfinal_table[1:6, 3:5] <- NA\n\n# Round numeric values to two decimal places\nnumeric_cols <- sapply(final_table, is.numeric)\nfinal_table[numeric_cols] <- lapply(final_table[numeric_cols], round, 2)\n\n# Create heading rows with the same columns as final_table\nheading_rows <- data.frame(\n  Variable = c(\"Sex\", \"Race\"),\n  baseline_year_1_arm_1 = NA_real_,\n  `1_year_follow_up_y_arm_1` = NA_real_,\n  `2_year_follow_up_y_arm_1` = NA_real_,\n  `3_year_follow_up_y_arm_1` = NA_real_\n)\n\n# Set column names of heading_rows to match final_table\ncolnames(heading_rows) <- colnames(final_table)\n\n# Introduce group labels and adjust the \"Variable\" column\nfinal_table <- rbind(\n                    heading_rows[1,], \n                    final_table[1:2,],\n                    heading_rows[2,], \n                    final_table[3:6,], \n                    final_table[7:9,]\n                    )\n\n# Update the Variable column to remove redundant factor variable name\nfinal_table$Variable <- gsub(\"Sex - \", \"\", final_table$Variable)\nfinal_table$Variable <- gsub(\"Race - \", \"\", final_table$Variable)\nfinal_table$Variable[final_table$Variable == \"Male or other\"] <- \"Male\"\n\n# Add non-breaking spaces for increased indentation\nfinal_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")] <- \n  paste0(rep(\"&nbsp;\", 6), final_table$Variable[final_table$Variable %in% c(\"Female\", \"Male\", \"Asian\", \"Black\", \"Other/Mixed\", \"White\")])\n\n# Update column headers\ncolnames(final_table)[2:5] <- c(\"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\")\n\n# Display the table interactively without row names, with updated column headers, and with HTML entities rendered\ndatatable(final_table, \n          colnames = c(\"\", \"Baseline\", \"Year 1\", \"Year 2\", \"Year 3\"),\n          options = list(pageLength = nrow(final_table), autoWidth = TRUE),\n          rownames = FALSE, escape = FALSE,\n          caption = \"Descriptives Table\")  # Add table title\n\n```\n\n:::\n:::\n\n## Results\n\n::: panel-tabset\n### Build Model: Step I {.tabset .tabset-fade .tabset-pills}\n\n::: blue\nThe code snippet below tells R to compute a difference score by subtracting each participant's height at T1 from their height at T0. Relevant summary statistics are also provided.\n\n**STEP 1: Compute Difference Score**\n\n```{r build-model-ttest-1}\n#| message: FALSE\n#| warning: FALSE\n#| echo: TRUE\n#| class.source: 'fold-hide'\n\n# Define the function to compute difference scores for a given variable and provide a summary\n# Function to compute difference scores for a given variable and provide a summary\ncompute_difference_and_summary <- function(df, variable_name) {\n    # Define the event names of interest\n    baseline_event <- \"baseline_year_1_arm_1\"\n    followup_event <- \"1_year_follow_up_y_arm_1\"\n\n    # Compute the difference between Baseline and Year 1 data for the given variable\n    diff_data <- df %>%\n        filter(eventname %in% c(baseline_event, followup_event)) %>% # Filter for specific event names\n        select(src_subject_id, eventname, all_of(variable_name)) %>% # Select required columns\n        spread(eventname, variable_name) %>% # Convert data from long to wide format\n        mutate(diff = get(followup_event) - get(baseline_event)) %>% # Compute difference between the two time points\n        drop_na(diff) # Exclude rows with NA in the computed difference\n\n    # Summarize the computed difference scores\n    diff_summary <- summary(diff_data$diff)\n\n    # Return the difference data and its summary\n    list(data = diff_data, summary = diff_summary)\n}\n\n# List of variables for which difference scores are to be computed\nvariables_of_interest <- c(\"anthroheightcalc\")\n\n# Compute and store difference scores and summaries for each variable in a list\ndifference_and_summary_list <- lapply(variables_of_interest, function(var) {\n    compute_difference_and_summary(df, var)\n})\n\n# Extract the difference data for the 'anthroheightcalc' variable\nheight_diff_data <- difference_and_summary_list[[1]]$data\n\n# Merge the 'diff' column back to the main df using 'src_subject_id' as the key\ndf <- left_join(df, height_diff_data %>% select(src_subject_id, diff), by = \"src_subject_id\")\n\n```\n\n**Descriptive Statistics for the Difference Score**\n```{r model-checking}\n# Compute statistical summaries for the difference score variable\nlapply(difference_and_summary_list, function(item) {\n    print(item$summary)\n})\n```\n\nThis summary of the difference score variable indicates that the differences range from a decrease of `r min(height_diff_data$diff, na.rm = TRUE)` units to an increase of `r max(height_diff_data$diff, na.rm = TRUE)` units. The median difference is `r median(height_diff_data$diff, na.rm = TRUE)` units, and the average difference is approximately `r mean(height_diff_data$diff, digits = 2, na.rm = TRUE)` units. There are `r sum(is.na(height_diff_data$diff))` missing values in this difference score dataset.\n\n**Descriptive Statistics for the Height Variable**\n```{r}\n## Summary statistics\n# Compute summary statistics for Height by eventname\nsummary <- df %>%\n    group_by(eventname) %>%\n    get_summary_stats(anthroheightcalc, type = \"mean_sd\")\n\ndata.frame(summary)\n```\n\nThe summary statistics provide insights into the Height variable across different `eventname` categories. At baseline, the average height is approximately `r summary$mean[summary$eventname == \"baseline_year_1_arm_1\"]` units with a standard deviation of `r summary$sd[summary$eventname == \"baseline_year_1_arm_1\"]`. Over the years, there’s a noticeable increase in average height: by the first year, it’s about `r summary$mean[summary$eventname == \"1_year_follow_up_y_arm_1\"]` units, and it continues to rise, reaching approximately `r summary$mean[summary$eventname == \"4_year_follow_up_y_arm_1\"]` units by the fourth year. The standard deviation remains relatively consistent over the years, suggesting similar variability in height measurements across these time points.\n\n:::\n\n### Build Model: Step 2 {.tabset .tabset-fade .tabset-pills}\n\n::: blue\n\nA one-sample t-test is computed to examine whether the average difference score is different than zero (indicating change).\n\n**STEP 2: Conduct t-test on Difference Score**\n\n```{r build-model-ttest-2}\n#| class.source: 'fold-hide'\n#| message: FALSE\n#| warning: FALSE\n#| echo: TRUE\n\n# Extract the difference scores for height from the computed list\ndiff_data <- difference_and_summary_list[[1]]$data$diff\n\n# Perform a one-sample t-test on the difference scores for height\ntest_result <- t.test(diff_data, mu = 0, na.rm = TRUE)\n\ntest_result\n\n```\n\nThis one-sample t-test evaluates whether the average difference score deviates significantly from 0. The model output provides:\n\ni. a t-statistic of `r test_result$statistic`;\nii. degrees of freedom of `r test_result$parameter`;\niii. a p-value of `r test_result$p.value`;\niv. a mean estimate of `r test_result$estimate[\"mean of x\"]`;\nv. 95% confidence intervals from `r test_result$conf.int[1]` to `r test_result$conf.int[2]`.\n\nv. 95% confidence intervals from `r round(test_result$conf.int[1], 3)` to `r round(test_result$conf.int[2], 3)`.\n\nWith a t-value of `r test_result$statistic` and a p-value of `r test_result$p.value`, we can determine the significance of the difference. The average difference score across the sample is approximately `r round(test_result$estimate[\"mean of x\"], 2)`. Furthermore, we can be 95% confident that the true mean difference score in the population lies between approximately `r round(test_result$conf.int[1], 2)` and `r round(test_result$conf.int[2], 2)`. This indicates the degree to which there's a change in height from Baseline to Year 1.\n\n:::\n\n### Model Plots\n\n::: blue\n```{r scatterplot}\n#| echo: TRUE\n#| messages: FALSE\n#| warning: FALSE\n#| code-summary: testing\n\n# Filter data for Baseline\nbaseline_data <- df %>% filter(eventname == \"Baseline\")\n\n# Filter data for Year_1 and join with Baseline data\njoined_data <- baseline_data %>%\n    left_join(df %>% filter(eventname == \"Year_1\"), by = \"src_subject_id\", suffix = c(\"_baseline\", \"_year1\"))\n\n# Create scatterplot\nscatterplot <- ggplot(df, aes(x = anthroheightcalc, y = diff)) +\n    geom_point(aes(color = sex), alpha = 0.5) + # Setting alpha to ensure points are visible\n    geom_smooth(method = \"lm\", color = \"red\") + # Adding linear regression line\n    labs(\n        title = \"Scatterplot of anthroheightcalc vs. Difference Score\",\n        x = \"anthroheightcalc\",\n        y = \"Difference Score\"\n    ) +\n    theme_minimal()\n\nscatterplot\n\n```\n\nThe scatterplot visually depicts the relationship between individuals' heights at baseline and their heights at Year_1. Each point on the plot represents an individual, with their baseline height plotted on the x-axis and their Year_1 height on the y-axis. A noticeable positive linear trend can be observed, as highlighted by the blue regression line, indicating that those who were taller at baseline generally remained taller at Year_1. The strength and direction of this relationship can be further quantified with correlation coefficients, but visually, the data suggests a strong positive association between baseline and Year_1 heights.\n\n:::\n:::\n\n## Wrapping Up\n\n::: panel-tabset\n### Write-up {.tabset .tabset-fade .tabset-pills}\n\n::: blue\nIn the study sample, the average height at baseline was approximately `r summary$mean[summary$eventname == \"baseline_year_1_arm_1\"]` units with a standard deviation of `r summary$sd[summary$eventname == \"baseline_year_1_arm_1\"]`, which showed a noticeable increase to an average of `r summary$mean[summary$eventname == \"1_year_follow_up_y_arm_1\"]` units by Year_1. A one-sample t-test was conducted to determine if the mean difference in height from baseline to Year_1 significantly deviated from zero. The results indicated a statistically significant increase with a mean difference of approximately `r round(test_result$estimate, 2)` units (`r round(test_result$conf.int[1], 2)` to `r round(test_result$conf.int[2], 2)`), t(`r test_result$parameter`) = `r round(test_result$statistic, 3)`, p < `r test_result$p.value`. Further, a scatterplot visualizing the relationship between baseline and Year_1 heights showed a strong positive linear trend. This suggests that participants who were taller at baseline generally remained taller at Year_1, reaffirming the consistent growth trend observed in the data.\n\n:::\n:::\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"cold-folding":true,"R.options":"list(width=220)","fig.align":"center","out.width":"75%","fig.asp":0.75,"dev":"cairo_pdf","engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":1,"html-math-method":"katex","output-file":"1a_Examples_DifferenceScores_PairedTtests.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","bibliography":["references.bib"],"comments":{"hypothesis":true},"theme":{"light":"cosmos","dark":"darkly"},"toc-expand":3,"toc-title":"Table of Contents","anchor-sections":true,"smooth-scroll":true,"linestretch":1.5,"code-copy":true,"code-summary":"Code","code-block-bg":true,"code-block-border-left":"#31BAE9","options":"max.print=75000","grid":{"sidebar-width":"425px"},"title":"Difference Scores: Paired Samples T-test","author":"Biostatistics Working Group"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}